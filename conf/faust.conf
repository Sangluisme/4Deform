experiment = VelocityDeform-FRAUST-r
dataset_class = datasets.flaxloader.FlaxPairShape
datasets{
    data_root =./data/faust_r
    num_shape=20
    batch_size=8192
}



velocity_class = models.modules.Decoder
implicit_class = models.modules.MLP
method = models.methods.Deform

network{
  
    velocity_net{
        d_in=3
        dims = [256,256,256,256,256,256,256,256]
        d_out=3
        multires=0
        activation=[relu]
        skip_layers = [4]
        geometry_init = 0
        timespace=1
        feature_vector_size=128
    }
    
    T=5
    
    implicit_net{
        d_in=3
        dims = [256,256,256,256,256,256,256,256]
        d_out=1
        multires=0
        activation=[softplus]
        skip_layers = [4]
        geometry_init = 1
        timespace=1
        feature_vector_size=128
    }

}

training{
    initial=0.0005
    interval=2000
    factor=0.5
    nepochs = 25000
    rng_seed = 5
    v_warm_up=2000
    full=30000
    fine_tune=1
}

check_point{
    save_interval_steps=500
}

plot{
    resolution=128
    checkpoint_intervel=5000
    f_batch_size=10000
}

loss{
    alpha = 0.01
    reinitial = 1
    laplacian = 20
    divergence = 20
    level_set = 100
    normal = 100
    match = 100
    manifold = 100
    nonmanifold = 10
    eikonal = 30  
    surf_area = 10
    stretching = 0.7
    distortion=100
    bending = 100
}